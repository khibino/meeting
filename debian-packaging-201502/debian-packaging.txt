% Debian Packaging 講座
% 第一回
% 2015-02-11 日比野 啓


本日の流れ
=======

* Packaging の準備
* Packaging


Debian Packaging の流れ
=======

0. パッケージングしたいソフトウェアのインストールを試す

1. dh_make

2. debian/* 以下を直す

3. debuild -uc -us

4. lintian -i ../*.dsc

2 〜 4 を繰り返す


準備
=======


adduser, sudo
=======

通常の(rootでない)ユーザーアカウントを作っていない人は作る

~~~ {.sh}
# adduser <username>
~~~

sudo を入れておくのと、ついでに作業用の権限を付加

~~~ {.sh}
# apt-get install sudo
# adduser <username> sudo
# adduser <username> staff
~~~

ユーザーアカウントでログイン済みの人はログイン仕直す

日本語
=======

日本語フォントを入れた X が動くようにしておく

~~~ {.sh}
~$ sudo apt-get install locales
~$ sudo /usr/sbin/dpkg-reconfigure locales
~~~
en_US.UTF-8, ja_JP.UTF-8 等にチェックして locale を生成

~~~
# sudo apt-get install less lv
~~~


Document pacakges
=======

ドキュメントとドキュメントツールをインストールする

~~~ {.sh}
~$ sudo apt-get [-s] install \
  man-db info w3m \
  manpages manpages-ja \
  manpages-dev manpages-ja-dev \
  maint-guide maint-guide-ja \
  make-doc packaging-tutorial
~~~

How to read documents
=======

sudo(8), adduser(8), apt-get(8)

~~~
~$ man 8 sudo
~$ man 8 adduser
~$ man apt-get
~~~

第一引数に マニュアルページの section を渡すことができる。
複数の section に同じ名前のマニュアルが無いのなら省略しても読める。

HTML や GNU info でドキュメントが提供されているものもある

~~~
~$ info
~$ info make
~$ w3m /usr/share/doc/w3m/ja/MANUAL.html
~~~

Packaging に使うもの
=======

ビルドツール - Build tools

~~~
~$ sudo apt-get [-s] install \
  build-essential dh-make \
  devscripts lintian fakeroot \
  wget
~~~

テキストエディタ - Text editor

~~~
~$ sudo apt-get [-s] install \
  [ ng-cjk | emacs24 | vim | jed ]
~~~

More optionals
=======

パッケージ内のファイル検索用

~~~
~$ sudo apt-get install apt-file dlocate
~~~

~~~
~$ sudo -v ; sudo /etc/cron.daily/dlocate &
~$ apt-file update
~~~

Packaging 1
=======

どこか適当な場所を用意して ...

~~~
~$ mkdir work
~$ cd work
~~~

Packaging するソースを取ってくる

~~~
~/work$ wget http://ftp.gnu.org/gnu/hello/hello-2.7.tar.gz
~~~

wget(1), info wget


Packaging
======


Packaging 1
======

試しにインストール

~~~
~/work$ mkdir install-test
~/work$ cd install-test
install-test$ tar zxvf ../hello-2.7.tar.gz
hello-2.7$ cd hello-2.7
hello-2.7$ ./configure --prefix=/usr/local/hello-2.7
hello-2.7$ make
hello-2.7$ make install
hello-2.7$ /usr/local/hello-2.7/bin/hello
~~~

mkdir(1), tar(1), make(1)

Packaging 2
=======

実際に Packaging してみる

~~~
$ cd ~/work
~/work$ tar zxvf hello-2.7.tar.gz
~/work$ cd hello-2.7
hello-2.7$ dh_make -f ../hello-2.7.tar.gz
~~~

debian ディレクトリを確認して build する

~~~
hello-2.7$ ls -ld debian
hello-2.7$ debuild -uc -us
~~~

*.build に build のログが残る

dh_make(8), ls(1), debuild(1)


Check packaging result
======

できあがったパッケージを確かめる

~~~
hello-2.7$ debc
hello-2.7$ lintian -i
~~~

試しにインストールする

~~~
hello-2.7$ sudo debi
hello-2.7$ /usr/bin/hello
hello-2.7$ sudo apt-get [ -s ] remove hello
~~~

lintian(1), debc(1), debi(1)


Failed case
======

~~~
~/work$ wget http://ftp.gnu.org/gnu/hello/hello-2.10.tar.gz
~/work$ tar zxvf hello-2.10.tar.gz
~/work$ cd hello-2.10
hello-2.10$ dh_make -f ../hello-2.10.tar.gz
hello-2.10$ debuild -uc -us
~~~

*.build をよく見る

?? debian/rules clean


Rules file
======

debian/rules

単なる GNU make 用の Makefile だが、
必須のターゲットが決まっている

~~~
#!/usr/bin/make -f
~~~


~~~ {.sh}
$ w3m /usr/share/doc/maint-guide-ja/html/index.ja.html
or
$ w3m /usr/share/doc/maint-guide/html/index.en.html
~~~

4.4 rules

info make


Rules file
======

debian/rules

最近は dh コマンドで抽象化がすすんでいる

4.4.3. rules ファイルのカスタマイズ

dh(1)


How to fix it?
======

直すのに挑戦してみましょう。


~~~
hello-2.10$ debc
hello-2.10$ lintian -i
hello-2.10$ sudo debi
hello-2.10$ /usr/bin/hello
~~~

Rules and debhelper
======

~~~
fakeroot debian/rules clean

Control file
======

debian/control

ビルド時の依存関係や、
実行時の依存関係が足りなければ追加する。

native の dynamic link library は、
dh_shlibdeps で自動検出される

debian/*.substvars

dh_shlibdeps(1)


lintian
======

あとは lintian -i の結果を見てなんとかする


参考ドキュメント
======

* 公式のマニュアル
** https://www.debian.org/doc/#manuals

* 日本語の HowTo 文書
** http://tokyodebian.alioth.debian.org/undocumenteddebian.html
